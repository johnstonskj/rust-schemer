/*!
One-line description.

More detailed description, with

# Example

 */

use crate::types::{Boolean, Char, Number, Pair, SchemeRepr, SchemeString, Symbol};

// ------------------------------------------------------------------------------------------------
// Public Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Types
// ------------------------------------------------------------------------------------------------

macro_rules! string_conv {
    ($fn_name:ident, $Target:ty) => {
        paste! {
            pub fn [<$fn_name _to_string>](v: &$Target) -> SchemeString {
                v.to_repr_string().into()
            }
        }
    };
}

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

string_conv!(boolean, Boolean);

string_conv!(char, Char);

string_conv!(number, Number);

string_conv!(symbol, Symbol);

string_conv!(list, Pair);

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------
