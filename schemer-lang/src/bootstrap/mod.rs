/*!
One-line description.

More detailed description, with

# Example

*/

use crate::error::Error;
use crate::eval::Environment;
use crate::types::MutableRef;

// ------------------------------------------------------------------------------------------------
// Public Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Types
// ------------------------------------------------------------------------------------------------

//const PREDICATE_SRC: &str = include_str!("predicates.scr");

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

pub fn bootstrap() -> Result<MutableRef<Environment>, Error> {
    let env = MutableRef::from(Environment::top());

    Ok(env)
}

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------
