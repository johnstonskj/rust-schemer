/*!
One-line description.

More detailed description, with

# Example

*/

use crate::error::Error;
use crate::machine::{Instruction, Memory};
use std::collections::LinkedList;

// ------------------------------------------------------------------------------------------------
// Public Types
// ------------------------------------------------------------------------------------------------

pub struct State {
    memory: Memory,
    instruction_ptr: usize,
    instruction_stack: LinkedList<Instruction>,
}

// ------------------------------------------------------------------------------------------------
// Private Types
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Public Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Implementations
// ------------------------------------------------------------------------------------------------

impl From<Memory> for State {
    fn from(m: Memory) -> Self {
        Self::new(m, Default::default())
    }
}

impl State {
    pub fn new(memory: Memory, initial_ptr: usize) -> Self {
        Self {
            memory,
            instruction_ptr: initial_ptr,
            instruction_stack: Default::default(),
        }
    }
    pub fn step(self) -> Result<Self, Error> {
        todo!()
    }
}

// ------------------------------------------------------------------------------------------------
// Private Functions
// ------------------------------------------------------------------------------------------------

// ------------------------------------------------------------------------------------------------
// Modules
// ------------------------------------------------------------------------------------------------
